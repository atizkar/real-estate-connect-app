# docker-compose.yml
version: '3.8'

services:
  nginx_web:
    image: ${DOCKER_USERNAME}/real-estate-connect-app:${WEB_IMAGE_TAG}
    ports:
      - "3002:80" # Expose port 3002 on host to port 80 in container
    depends_on:
      - laravel_app
    networks:
      - app-network

  laravel_app:
    image: ${DOCKER_USERNAME}/real-estate-connect-laravel:${LARAVEL_IMAGE_TAG}
    ports:
      # --- NEW: Expose Laravel's port to the host ---
      - "8000:8000" # Maps host port 8000 to container port 8000
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql_db
      DB_PORT: 3306
      DB_DATABASE: ${MYSQL_DATABASE}
      DB_USERNAME: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      mysql_db:
        condition: service_healthy # Wait until MySQL is healthy before starting Laravel
    networks:
      - app-network

  mysql_db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "33061:3306" # Optional: Expose MySQL for local connection/tools
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 5s
      retries: 10
      interval: 3s
      start_period: 30s
    # Removed: command: --verbose # This was causing the MySQL startup error
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
