	server {
    listen 80;
    listen [::]:80;

    server_name localhost;

    root /usr/share/nginx/html; # Points to your React app's build output
    index index.html index.htm;

    # Proxy API requests to Laravel Backend
    # Requests starting with /api/ will be forwarded to the 'laravel_app' service
    location /llm-api/ {
        proxy_pass http://host.docker.internal:1234/; # Use host.docker.internal for local host access
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        rewrite ^/llm-api/(.*)$ /$1 break;
    }

    # Removed LLM Studio proxy block for CI/CD environment.
    # The 'host.docker.internal' is not available in Linux-based GitHub Actions runners.
    # If you need LLM integration for local development, keep this block in your local nginx/default.conf,
    # but ensure it's not the one used for CI/CD builds.
    # location /llm-api/ {
    #     proxy_pass http://host.docker.internal:1234/;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_connect_timeout 60s;
    #     proxy_send_timeout 60s;
    #     proxy_read_timeout 60s;
    #     rewrite ^/llm-api/(.*)$ /$1 break;
    # }

    # Serve React frontend for all other requests
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Cache static assets for performance
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Generic error page configuration
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html; # Assumes you have a 50x.html in your React build output
    }
}
