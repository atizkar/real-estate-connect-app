# .github/workflows/ci-cd.yml
name: CI/CD Pipeline - Multi-Service Docker Build

on:
  push:
    branches:
      - dev
      - feature/laravel-backend # Trigger on pushes to your new feature branch
  pull_request:
    branches:
      - dev
      - feature/laravel-backend # Also run on pull requests to these branches

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set Image Tags
        id: set_tags
        run: |
          # Get the branch name and sanitize it for use as a Docker tag
          # Replaces slashes and other non-alphanumeric chars with hyphens, converts to lowercase
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed -e "s/refs\/heads\///g" | sed -e "s/[^a-zA-Z0-9-]/-/g" | tr '[:upper:]' '[:lower:]')

          # Determine the tag for the web (React/Nginx) image
          if [ "$BRANCH_NAME" == "dev" ]; then
            WEB_TAG="latest"
          else
            WEB_TAG="$BRANCH_NAME"
          fi

          # Determine the tag for the Laravel (backend) image
          if [ "$BRANCH_NAME" == "dev" ]; then
            LARAVEL_TAG="latest"
          else
            LARAVEL_TAG="$BRANCH_NAME"
          fi

          # Output the tags for use in subsequent steps
          echo "WEB_IMAGE_TAG=$WEB_TAG" >> $GITHUB_OUTPUT
          echo "LARAVEL_IMAGE_TAG=$LARAVEL_TAG" >> $GITHUB_OUTPUT

          echo "Preparing to build and push images:"
          echo "  Frontend (React/Nginx): knowledgepot/real-estate-connect-app:$WEB_TAG"
          echo "  Backend (Laravel): knowledgepot/real-estate-connect-laravel:$LARAVEL_TAG"

      - name: Build and Push Docker images
        env:
          WEB_IMAGE_TAG: ${{ steps.set_tags.outputs.WEB_IMAGE_TAG }}
          LARAVEL_IMAGE_TAG: ${{ steps.set_tags.outputs.LARAVEL_IMAGE_TAG }}
        run: |
          # Build the React/Nginx image using its Dockerfile in the root context
          docker build \
            -t knowledgepot/real-estate-connect-app:$WEB_IMAGE_TAG \
            -f Dockerfile \
            .

          # Build the Laravel backend image using its Dockerfile in the laravel_backend context
          docker build \
            -t knowledgepot/real-estate-connect-laravel:$LARAVEL_IMAGE_TAG \
            -f laravel_backend/Dockerfile \
            ./laravel_backend

          # Push the newly built images to Docker Hub
          docker push knowledgepot/real-estate-connect-app:$WEB_IMAGE_TAG
          docker push knowledgepot/real-estate-connect-laravel:$LARAVEL_IMAGE_TAG

      - name: Verify pushed images (Optional)
        run: |
          echo "Verifying images on Docker Hub by pulling them back..."
          docker pull knowledgepot/real-estate-connect-app:${{ steps.set_tags.outputs.WEB_IMAGE_TAG }}
          docker pull knowledgepot/real-estate-connect-laravel:${{ steps.set_tags.outputs.LARAVEL_IMAGE_TAG }}
          echo "Images pulled successfully for verification."
